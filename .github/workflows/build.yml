name: Build

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: 'ghcr.io/timower/rm-docker:main'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/toltec-dev/base:v2.3

    steps:
      - name: Install Deps
        run: apt-get update && apt-get install -y git git-lfs

      - uses: actions/checkout@v3
        with:
          lfs: 'true'

      - name: Configure CMake
        run: cmake --preset release-toltec

      - name: Build
        run: cmake --build build/release-toltec

      - name: Package
        run: cmake --build build/release-toltec --target package

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: build/release-toltec/*.ipk

  build-host:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: 'true'

      - name: Install Deps
        run: sudo apt-get install -y ninja-build libsdl2-dev xxd llvm libevdev-dev libsystemd-dev

      - name: Configure CMake
        run: cmake --preset dev-host

      - name: Build
        run: cmake --build build/host

      - name: Unit Tests
        run: cmake --build build/host --target make-coverage

      - name: Upload Coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # required
          files: ./build/host/report.lcov
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)

      - name: Upload Test Binary
        uses: actions/upload-artifact@v2
        with:
          name: host-package
          path: build/host/tools/rm2fb-emu/rm2fb-test

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build, build-host]

    strategy:
      matrix:
        fw_version: ['2.15.1', '3.3.2', '3.5.2', '3.8.2']

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: 'true'

      - name: Install Deps
        run: sudo apt-get install -y libsdl2-2.0-0

      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: package
          path: packages/

      - name: Download host package
        uses: actions/download-artifact@v2
        with:
          name: host-package
          path: tools/

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Integration Tests
        id: intest
        run: |
          chmod +x ./tools/rm2fb-test
          mkdir ./tmp
          ./test/integration/test.sh \
            ${{ env.IMAGE_NAME }}-${{ matrix.fw_version }} \
            ./packages/ \
            ./tools/rm2fb-test \
            ./tmp

      - name: Upload test results
        if:  ${{ failure() && steps.intest.conclusion == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: test_failures_${{ matrix.fw_version }}
          path: ./tmp


  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: package

      - run: ls -la

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: ./*


